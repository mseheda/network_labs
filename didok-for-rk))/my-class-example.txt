#include <iostream>
#include <string>

class MyClass {
private:
    std::string data;

public:
    // Конструктор за замовчуванням
    MyClass() : data("default") {
        std::cout << "Default constructor called. Data: " << data << std::endl;
    }

    // Конструктор з параметром
    MyClass(const std::string& value) : data(value) {
        std::cout << "Parameterized constructor called. Data: " << data << std::endl;
    }

    // Конструктор копіювання
    MyClass(const MyClass& other) : data(other.data) {
        std::cout << "Copy constructor called. Data: " << data << std::endl;
    }

    // Конструктор переміщення
    MyClass(MyClass&& other) noexcept : data(std::move(other.data)) {
        std::cout << "Move constructor called. Data: " << data << std::endl;
    }

    // Оператор присвоєння копіювання
    MyClass& operator=(const MyClass& other) {
        if (this != &other) {
            data = other.data;
            std::cout << "Copy assignment operator called. Data: " << data << std::endl;
        }
        return *this;
    }

    // Оператор присвоєння переміщення
    MyClass& operator=(MyClass&& other) noexcept {
        if (this != &other) {
            data = std::move(other.data);
            std::cout << "Move assignment operator called. Data: " << data << std::endl;
        }
        return *this;
    }

    // Деструктор
    ~MyClass() {
        std::cout << "Destructor called. Data: " << data << std::endl;
    }
};

int main() {
    std::cout << "Creating object obj1 (default constructor):\n";
    MyClass obj1;

    std::cout << "\nCreating object obj2 (parameterized constructor):\n";
    MyClass obj2("Hello, OOP!");

    std::cout << "\nCreating object obj3 (copy constructor):\n";
    MyClass obj3 = obj2;

    std::cout << "\nCreating object obj4 (move constructor):\n";
    MyClass obj4 = std::move(obj2);

    std::cout << "\nAssigning obj1 = obj3 (copy assignment):\n";
    obj1 = obj3;

    std::cout << "\nAssigning obj1 = std::move(obj4) (move assignment):\n";
    obj1 = std::move(obj4);

    std::cout << "\nEnd of main. Destructors will be called automatically:\n";

    return 0;
}
